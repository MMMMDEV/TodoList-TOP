(()=>{"use strict";var n={24:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(537),r=t.n(i),a=t(645),o=t.n(a)()(r());o.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n',"",{version:3,sources:["webpack://./src/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n'],sourceRoot:""}]);const A=o},426:(n,e,t)=>{t.d(e,{Z:()=>h});var i=t(537),r=t.n(i),a=t(645),o=t.n(a),A=t(667),s=t.n(A),c=new URL(t(111),t.b),d=new URL(t(336),t.b),l=o()(r()),u=s()(c),m=s()(d);l.push([n.id,'@font-face {\n    font-family: "poppins";\n    src: url('+u+');\n}\n\n@font-face {\n    font-family: "Mukta";\n    src: url('+m+');\n}\n\n:root {\n    --back-drop-color: #191919;\n    --accent-dark: #101010;\n    --white-color: #fafafa;\n    --accent-grey: #959595;\n    --blue-color: #4791FF;\n    --side-header-width: 35%;\n    --main-width: calc(100% - var(--side-header-width));\n    --icon-size: 15px;\n    --project-height: 50px;\n    --add-project-height: 35px;\n    --header-main-height: 30px;\n    --label-width: 100%;\n    --textarea-height: 100px;\n    --submit-height: 40px;\n    --submit-width: 90px;\n    --input: 100%;\n    --item-width: 90%;\n    --item-height: 50px;\n    --side-list-size: 40px;\n    --check-size: 25px;\n    --remove-width: 3px;\n    --remove-height: 40%;\n    --hide-icon: 5px;\n}\n\n*, *::before, *::after {\n    box-sizing: border-box;\n}\n\n*:focus {\n    outline: none;\n}\n\nhtml {\n    background-color: var(--back-drop-color);\n}\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n}\n\n.content {\n    width: 100%;\n    height: 100%;\n    background-color: var(--back-drop-color);\n    position: relative;\n}\n\n\n\n/* ----- header ----- */\n\n.side-header-active {\n    width: var(--side-header-width);\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr 1fr 2fr 0.5fr;\n    position: fixed;\n    top: 0;\n    background-color: var(--accent-dark);\n    border-radius: 0px 15px 15px 0px;\n    font-family: "poppins";\n    gap: 10px;\n}\n\n/* todolist */\n\n.todo-list {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n}\n\n.icon {\n    width: var(--icon-size);\n    height: var(--icon-size);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-left: 10px;\n}\n\n.text {\n    margin: 0px;\n    color: var(--white-color);\n    display: flex;\n    flex: 1;\n}\n\n.today-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.week-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.month-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.upcoming-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n/* priority */\n\n.priority {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.priorities {\n    width: 100%;\n    height: 50%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.Arrow-icon {\n    width: calc(var(--icon-size) - 5px);\n    height: calc(var(--icon-size) - 5px);\n    margin-left: 10px;\n    rotate: -90deg;\n}\n\n.priority-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.9rem;\n}\n\n.critical {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    margin-left: 10px;\n}\n\n.major {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    margin-left: 10px;\n}\n\n.moderate {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    margin-left: 10px;\n}\n\n/* projects */\n\n.projects {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n.project {\n    width: 100%;\n    height: var(--project-height);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.projects-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex: 0;\n}\n\n.add-project {\n    width: 100%;\n    height: var(--add-project-height);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-top: 1px solid var(--white-color);\n    border-bottom: 1px solid var(--white-color);\n}\n\n.add-project p {\n    width: 40%;\n    flex: none;\n}\n\n/* adjustments */\n\n.adjustments {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.sources {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.settings {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.sources p,\n.settings p{\n    flex: none;\n}\n\n.sources img,\n.settings img {\n    margin: 0;\n}\n\n\n/* ----- main ----- */\n.main-strech {\n    margin-left: 0px;\n    width: 100%;\n    min-height: 100%;\n    max-height: 600vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.main-active {\n    width: var(--main-width);\n    min-height: 100%;\n    max-height: 600vh;\n    margin-left: var(--side-header-width);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.header-main {\n    width: 100%;\n    height: var(--header-main-height);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    font-family: "mukta";\n}\n\n.hide-side-header img,\n.add-new-item img {\n    margin: 0;\n    transition: 0.4s;\n}\n\n.hide-side-header img {\n    margin-left: 10px;\n}\n\n.add-new-item img {\n    margin-right: 10px;\n}\n\n.current-section {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n}\n\n.current-section p {\n    justify-content: center;\n}\n\n.main-content {\n    width: 100%;\n    min-height: calc(100% - var(--header-main-height));\n    max-height: 600vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    background-color: var(--back-drop-color);\n\n}\n\n.done-div {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    scale: 1;\n}\n\n.done-div p {\n    font-family: "mukta";\n    flex: none;\n    color: #939393;\n}\n\n.done-div img {\n    width: calc(var(--icon-size) * 5);\n    height: calc(var(--icon-size) * 5);\n    padding-top: 10px;\n    margin: 0px;\n}\n\n/* add-module */\n\n.add-container {\n    width: 100%;\n    height: 0%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: rgb(5, 5, 5);\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 11;\n    border-top-left-radius: 30px;\n    border-top-right-radius: 30px;\n    box-shadow: none;\n    transition: 0.8s ease-in-out;\n    translate: 0px, 200px;\n}\n\n.overlay {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: black;\n    opacity: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    pointer-events: none;\n    z-index: 10;\n    transition: 0.8s ease-in-out;\n}\n\n.active-add {\n    height: 60%;\n    box-shadow:  0px 0px 30px white;\n}\n\n.active-overlay {\n    opacity: 0.5;\n    pointer-events: all;\n}\n\n.form-add {\n    width: 75%;\n    height: 0%;\n    scale: 0;\n    display: flex;\n    flex-direction: column;\n    transition: 0.8s ease-in-out;\n    gap: 20px;\n}\n\n.form-active {\n    scale: 1;\n    height: 80%;\n}\n\n.label {\n    width: var(--label-width);\n    color: var(--white-color);\n    font-family: "mukta";\n}\n\n.input {\n    width: var(--input);\n    background-color: var(--white-color);\n    flex: 1;\n    font-family: "mukta";\n    border: 0px solid transparent;\n    border-radius: 15px;\n    padding: 3px;\n}\n\n.tittle-container {\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.description-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.description-container label {\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    flex: 1;\n}\n\n.textarea {\n    width: 100%;\n    height: var(--textarea-height);\n    border-radius: 15px;\n    padding: 3px;\n    font-family: "mukta";\n}\n\n.date-container {\n    justify-content: center;\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    gap: 5px;\n}\n\n.date-container label {\n    width: 45px;\n}\n\n.date-container input {\n    flex: none;\n    width: 120px;\n    text-align: center;\n}\n\n.btn-submit-container {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.submit-add {\n    width: var(--submit-width);\n    height: var(--submit-height);\n    background-color: var(--white-color);\n    margin-top: 15px;\n    font-family: "mukta";\n    border: 0px solid transparent;\n    background-color: var(--blue-color);\n    color: var(--white-color);\n    font-size: 1.3rem;\n}\n\n/* todo.js */\n\n.todoT-main,\n.todoW-main,\n.todoM-main,\n.todoU-main {\n    width: 0%;\n    height: 0%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-direction: column;\n    gap: 10px;\n    scale: 0;\n}\n\n.main-todo-active {\n    width: 100%;\n    height: 100%;\n    padding: 10px;\n    scale: 1;\n}\n\n.item {\n    width: var(--item-width);\n    height: var(--item-height);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: var(--accent-dark);\n    transition: 0.3s ease-in-out;\n    border-radius: 10px;\n}\n\n.item-expand {\n    height: calc(var(--item-height) * 4) ;\n}\n\n.top-item,\n.end-item {\n    width: 0%;\n    height: 0%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    transition: 0.3s ease-in-out;\n    font-family: "Mukta";\n}\n\n.middle-item {\n    width: 0%;\n    height: 0%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    transition: 0.3s ease-in-out;\n    font-family: "Mukta";\n}\n\n.top-end-item-active {\n    width: 100%;\n    height: var(--item-height);\n}\n\n.middle-item-active {\n    width: 100%;\n    height: calc(var(--item-height) * 2);\n    padding: 0px 10px;\n    color: var(--white-color);\n    text-align: center;\n}\n\n.desc {\n    flex-wrap: wrap;\n    word-break: break-all;\n    color: var(--white-color);\n}\n\n.date-p {\n    margin: 0;\n    color: var(--white-color);\n}\n\n.check-container {\n    width: var(--side-list-size);\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.button-check {\n    appearance: none;\n    width: var(--check-size);\n    height: var(--check-size);\n    border-radius: 50%;\n    border: 2px solid var(--blue-color);\n    background-color: var(--accent-dark);\n    transition: 0.5s ease-in-out;\n}\n\n.button-check:checked {\n    border: 2px solid var(--accent-grey);\n    width: var(--check-size);\n    height: 3px;\n    border-radius: 1px;\n}\n\n.tittle-list-container {\n    width: calc(100% - var(--side-list-size));\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: 0.3s ease-in-out;\n}\n\n.remove-container {\n    width: var(--side-list-size);\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n}\n\n.side-one-remove,\n.side-two-remove {\n    width: var(--remove-width);\n    height: var(--remove-height);\n    background-color: var(--white-color);\n    position: absolute;\n    background-color: #DB5757;\n}\n\n.side-one-remove {\n    rotate: 45deg;\n}\n\n.side-two-remove {\n    rotate: -45deg;\n}\n\n.tittle-text {\n    color: var(--white-color);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-family: "mukta";\n    transition: 0.5s ease-in-out;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,4CAAqC;AACzC;;AAEA;IACI,oBAAoB;IACpB,4CAAmC;AACvC;;AAEA;IACI,0BAA0B;IAC1B,sBAAsB;IACtB,sBAAsB;IACtB,sBAAsB;IACtB,qBAAqB;IACrB,wBAAwB;IACxB,mDAAmD;IACnD,iBAAiB;IACjB,sBAAsB;IACtB,0BAA0B;IAC1B,0BAA0B;IAC1B,mBAAmB;IACnB,wBAAwB;IACxB,qBAAqB;IACrB,oBAAoB;IACpB,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;;IAEI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,wCAAwC;IACxC,kBAAkB;AACtB;;;;AAIA,uBAAuB;;AAEvB;IACI,+BAA+B;IAC/B,aAAa;IACb,aAAa;IACb,qCAAqC;IACrC,eAAe;IACf,MAAM;IACN,oCAAoC;IACpC,gCAAgC;IAChC,sBAAsB;IACtB,SAAS;AACb;;AAEA,aAAa;;AAEb;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,wBAAwB;IACxB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,aAAa;IACb,OAAO;AACX;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA,aAAa;;AAEb;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,mCAAmC;IACnC,oCAAoC;IACpC,iBAAiB;IACjB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA,aAAa;;AAEb;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,6BAA6B;IAC7B,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,OAAO;AACX;;AAEA;IACI,WAAW;IACX,iCAAiC;IACjC,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,wCAAwC;IACxC,2CAA2C;AAC/C;;AAEA;IACI,UAAU;IACV,UAAU;AACd;;AAEA,gBAAgB;;AAEhB;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,UAAU;AACd;;AAEA;;IAEI,SAAS;AACb;;;AAGA,qBAAqB;AACrB;IACI,gBAAgB;IAChB,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;IAChB,iBAAiB;IACjB,qCAAqC;IACrC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,iCAAiC;IACjC,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;;IAEI,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,OAAO;AACX;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,kDAAkD;IAClD,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,OAAO;IACP,wCAAwC;;AAE5C;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,oBAAoB;IACpB,UAAU;IACV,cAAc;AAClB;;AAEA;IACI,iCAAiC;IACjC,kCAAkC;IAClC,iBAAiB;IACjB,WAAW;AACf;;AAEA,eAAe;;AAEf;IACI,WAAW;IACX,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,8BAA8B;IAC9B,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,OAAO;IACP,WAAW;IACX,4BAA4B;IAC5B,6BAA6B;IAC7B,gBAAgB;IAChB,4BAA4B;IAC5B,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,UAAU;IACV,MAAM;IACN,QAAQ;IACR,SAAS;IACT,OAAO;IACP,oBAAoB;IACpB,WAAW;IACX,4BAA4B;AAChC;;AAEA;IACI,WAAW;IACX,+BAA+B;AACnC;;AAEA;IACI,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,UAAU;IACV,QAAQ;IACR,aAAa;IACb,sBAAsB;IACtB,4BAA4B;IAC5B,SAAS;AACb;;AAEA;IACI,QAAQ;IACR,WAAW;AACf;;AAEA;IACI,yBAAyB;IACzB,yBAAyB;IACzB,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;IACnB,oCAAoC;IACpC,OAAO;IACP,oBAAoB;IACpB,6BAA6B;IAC7B,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,mBAAmB;IACnB,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,aAAa;IACb,qBAAqB;IACrB,mBAAmB;IACnB,OAAO;AACX;;AAEA;IACI,WAAW;IACX,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;IAC1B,4BAA4B;IAC5B,oCAAoC;IACpC,gBAAgB;IAChB,oBAAoB;IACpB,6BAA6B;IAC7B,mCAAmC;IACnC,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA,YAAY;;AAEZ;;;;IAII,SAAS;IACT,UAAU;IACV,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;IACT,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,wBAAwB;IACxB,0BAA0B;IAC1B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,oCAAoC;IACpC,4BAA4B;IAC5B,mBAAmB;AACvB;;AAEA;IACI,qCAAqC;AACzC;;AAEA;;IAEI,SAAS;IACT,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,4BAA4B;IAC5B,oBAAoB;AACxB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,4BAA4B;IAC5B,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,0BAA0B;AAC9B;;AAEA;IACI,WAAW;IACX,oCAAoC;IACpC,iBAAiB;IACjB,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,yBAAyB;AAC7B;;AAEA;IACI,SAAS;IACT,yBAAyB;AAC7B;;AAEA;IACI,4BAA4B;IAC5B,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;IACxB,yBAAyB;IACzB,kBAAkB;IAClB,mCAAmC;IACnC,oCAAoC;IACpC,4BAA4B;AAChC;;AAEA;IACI,oCAAoC;IACpC,wBAAwB;IACxB,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,yCAAyC;IACzC,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,4BAA4B;AAChC;;AAEA;IACI,4BAA4B;IAC5B,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;;IAEI,0BAA0B;IAC1B,4BAA4B;IAC5B,oCAAoC;IACpC,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,gBAAgB;IAChB,uBAAuB;IACvB,oBAAoB;IACpB,4BAA4B;AAChC",sourcesContent:['@font-face {\n    font-family: "poppins";\n    src: url(./fonts/Poppins-Regular.ttf);\n}\n\n@font-face {\n    font-family: "Mukta";\n    src: url(./fonts/Mukta-Regular.ttf);\n}\n\n:root {\n    --back-drop-color: #191919;\n    --accent-dark: #101010;\n    --white-color: #fafafa;\n    --accent-grey: #959595;\n    --blue-color: #4791FF;\n    --side-header-width: 35%;\n    --main-width: calc(100% - var(--side-header-width));\n    --icon-size: 15px;\n    --project-height: 50px;\n    --add-project-height: 35px;\n    --header-main-height: 30px;\n    --label-width: 100%;\n    --textarea-height: 100px;\n    --submit-height: 40px;\n    --submit-width: 90px;\n    --input: 100%;\n    --item-width: 90%;\n    --item-height: 50px;\n    --side-list-size: 40px;\n    --check-size: 25px;\n    --remove-width: 3px;\n    --remove-height: 40%;\n    --hide-icon: 5px;\n}\n\n*, *::before, *::after {\n    box-sizing: border-box;\n}\n\n*:focus {\n    outline: none;\n}\n\nhtml {\n    background-color: var(--back-drop-color);\n}\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n}\n\n.content {\n    width: 100%;\n    height: 100%;\n    background-color: var(--back-drop-color);\n    position: relative;\n}\n\n\n\n/* ----- header ----- */\n\n.side-header-active {\n    width: var(--side-header-width);\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr 1fr 2fr 0.5fr;\n    position: fixed;\n    top: 0;\n    background-color: var(--accent-dark);\n    border-radius: 0px 15px 15px 0px;\n    font-family: "poppins";\n    gap: 10px;\n}\n\n/* todolist */\n\n.todo-list {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n}\n\n.icon {\n    width: var(--icon-size);\n    height: var(--icon-size);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-left: 10px;\n}\n\n.text {\n    margin: 0px;\n    color: var(--white-color);\n    display: flex;\n    flex: 1;\n}\n\n.today-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.week-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.month-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.upcoming-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n/* priority */\n\n.priority {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.priorities {\n    width: 100%;\n    height: 50%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.Arrow-icon {\n    width: calc(var(--icon-size) - 5px);\n    height: calc(var(--icon-size) - 5px);\n    margin-left: 10px;\n    rotate: -90deg;\n}\n\n.priority-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.9rem;\n}\n\n.critical {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    margin-left: 10px;\n}\n\n.major {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    margin-left: 10px;\n}\n\n.moderate {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    margin-left: 10px;\n}\n\n/* projects */\n\n.projects {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n.project {\n    width: 100%;\n    height: var(--project-height);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.projects-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex: 0;\n}\n\n.add-project {\n    width: 100%;\n    height: var(--add-project-height);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-top: 1px solid var(--white-color);\n    border-bottom: 1px solid var(--white-color);\n}\n\n.add-project p {\n    width: 40%;\n    flex: none;\n}\n\n/* adjustments */\n\n.adjustments {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.sources {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.settings {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.sources p,\n.settings p{\n    flex: none;\n}\n\n.sources img,\n.settings img {\n    margin: 0;\n}\n\n\n/* ----- main ----- */\n.main-strech {\n    margin-left: 0px;\n    width: 100%;\n    min-height: 100%;\n    max-height: 600vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.main-active {\n    width: var(--main-width);\n    min-height: 100%;\n    max-height: 600vh;\n    margin-left: var(--side-header-width);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.header-main {\n    width: 100%;\n    height: var(--header-main-height);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    font-family: "mukta";\n}\n\n.hide-side-header img,\n.add-new-item img {\n    margin: 0;\n    transition: 0.4s;\n}\n\n.hide-side-header img {\n    margin-left: 10px;\n}\n\n.add-new-item img {\n    margin-right: 10px;\n}\n\n.current-section {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n}\n\n.current-section p {\n    justify-content: center;\n}\n\n.main-content {\n    width: 100%;\n    min-height: calc(100% - var(--header-main-height));\n    max-height: 600vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    background-color: var(--back-drop-color);\n\n}\n\n.done-div {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    scale: 1;\n}\n\n.done-div p {\n    font-family: "mukta";\n    flex: none;\n    color: #939393;\n}\n\n.done-div img {\n    width: calc(var(--icon-size) * 5);\n    height: calc(var(--icon-size) * 5);\n    padding-top: 10px;\n    margin: 0px;\n}\n\n/* add-module */\n\n.add-container {\n    width: 100%;\n    height: 0%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: rgb(5, 5, 5);\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 11;\n    border-top-left-radius: 30px;\n    border-top-right-radius: 30px;\n    box-shadow: none;\n    transition: 0.8s ease-in-out;\n    translate: 0px, 200px;\n}\n\n.overlay {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: black;\n    opacity: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    pointer-events: none;\n    z-index: 10;\n    transition: 0.8s ease-in-out;\n}\n\n.active-add {\n    height: 60%;\n    box-shadow:  0px 0px 30px white;\n}\n\n.active-overlay {\n    opacity: 0.5;\n    pointer-events: all;\n}\n\n.form-add {\n    width: 75%;\n    height: 0%;\n    scale: 0;\n    display: flex;\n    flex-direction: column;\n    transition: 0.8s ease-in-out;\n    gap: 20px;\n}\n\n.form-active {\n    scale: 1;\n    height: 80%;\n}\n\n.label {\n    width: var(--label-width);\n    color: var(--white-color);\n    font-family: "mukta";\n}\n\n.input {\n    width: var(--input);\n    background-color: var(--white-color);\n    flex: 1;\n    font-family: "mukta";\n    border: 0px solid transparent;\n    border-radius: 15px;\n    padding: 3px;\n}\n\n.tittle-container {\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.description-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.description-container label {\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    flex: 1;\n}\n\n.textarea {\n    width: 100%;\n    height: var(--textarea-height);\n    border-radius: 15px;\n    padding: 3px;\n    font-family: "mukta";\n}\n\n.date-container {\n    justify-content: center;\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    gap: 5px;\n}\n\n.date-container label {\n    width: 45px;\n}\n\n.date-container input {\n    flex: none;\n    width: 120px;\n    text-align: center;\n}\n\n.btn-submit-container {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.submit-add {\n    width: var(--submit-width);\n    height: var(--submit-height);\n    background-color: var(--white-color);\n    margin-top: 15px;\n    font-family: "mukta";\n    border: 0px solid transparent;\n    background-color: var(--blue-color);\n    color: var(--white-color);\n    font-size: 1.3rem;\n}\n\n/* todo.js */\n\n.todoT-main,\n.todoW-main,\n.todoM-main,\n.todoU-main {\n    width: 0%;\n    height: 0%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-direction: column;\n    gap: 10px;\n    scale: 0;\n}\n\n.main-todo-active {\n    width: 100%;\n    height: 100%;\n    padding: 10px;\n    scale: 1;\n}\n\n.item {\n    width: var(--item-width);\n    height: var(--item-height);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: var(--accent-dark);\n    transition: 0.3s ease-in-out;\n    border-radius: 10px;\n}\n\n.item-expand {\n    height: calc(var(--item-height) * 4) ;\n}\n\n.top-item,\n.end-item {\n    width: 0%;\n    height: 0%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    transition: 0.3s ease-in-out;\n    font-family: "Mukta";\n}\n\n.middle-item {\n    width: 0%;\n    height: 0%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    transition: 0.3s ease-in-out;\n    font-family: "Mukta";\n}\n\n.top-end-item-active {\n    width: 100%;\n    height: var(--item-height);\n}\n\n.middle-item-active {\n    width: 100%;\n    height: calc(var(--item-height) * 2);\n    padding: 0px 10px;\n    color: var(--white-color);\n    text-align: center;\n}\n\n.desc {\n    flex-wrap: wrap;\n    word-break: break-all;\n    color: var(--white-color);\n}\n\n.date-p {\n    margin: 0;\n    color: var(--white-color);\n}\n\n.check-container {\n    width: var(--side-list-size);\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.button-check {\n    appearance: none;\n    width: var(--check-size);\n    height: var(--check-size);\n    border-radius: 50%;\n    border: 2px solid var(--blue-color);\n    background-color: var(--accent-dark);\n    transition: 0.5s ease-in-out;\n}\n\n.button-check:checked {\n    border: 2px solid var(--accent-grey);\n    width: var(--check-size);\n    height: 3px;\n    border-radius: 1px;\n}\n\n.tittle-list-container {\n    width: calc(100% - var(--side-list-size));\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: 0.3s ease-in-out;\n}\n\n.remove-container {\n    width: var(--side-list-size);\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n}\n\n.side-one-remove,\n.side-two-remove {\n    width: var(--remove-width);\n    height: var(--remove-height);\n    background-color: var(--white-color);\n    position: absolute;\n    background-color: #DB5757;\n}\n\n.side-one-remove {\n    rotate: 45deg;\n}\n\n.side-two-remove {\n    rotate: -45deg;\n}\n\n.tittle-text {\n    color: var(--white-color);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-family: "mukta";\n    transition: 0.5s ease-in-out;\n}'],sourceRoot:""}]);const h=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(o[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);i&&o[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},o=[],A=0;A<n.length;A++){var s=n[A],c=i.base?s[0]+i.base:s[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var u=t(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var h=r(m,i);i.byIndex=A,e.splice(A,0,{identifier:l,updater:h,references:1})}o.push(l)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=i(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var A=t(a[o]);e[A].references--}for(var s=i(n,r),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},336:(n,e,t)=>{n.exports=t.p+"044d4dd07d7636695eda.ttf"},111:(n,e,t)=>{n.exports=t.p+"35d26b781dc5fda684cc.ttf"}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),r=t.n(i),a=t(569),o=t.n(a),A=t(565),s=t.n(A),c=t(216),d=t.n(c),l=t(589),u=t.n(l),m=t(426),h={};h.styleTagTransform=u(),h.setAttributes=s(),h.insert=o().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=d(),e()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;var f=t(24),g={};g.styleTagTransform=u(),g.setAttributes=s(),g.insert=o().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=d(),e()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const C=t.p+"e3553a66f5c76ea78f1e.svg",p=t.p+"e9fd73937d7b7b99a207.svg",B=t.p+"b19cbd716c548ad2b60d.svg",v=t.p+"1411e9bf5623f1e44985.svg",b=document.createElement("div"),E=document.createElement("div"),w=document.createElement("div"),x=document.createElement("div"),y=document.createElement("div"),I=t.p+"4ea555310b55bc87c419.svg",k=t.p+"bcc2ea41d73fa5aa8ce1.svg",j=t.p+"32bb4c415a77b1a18cde.svg",M=t.p+"fb44f169841b5c89115d.svg",S=t.p+"7988890a94ac010e6a9b.svg",L=t.p+"936964ce4b0017368142.svg",T=t.p+"57042ee589bb946f4c14.svg",W=document.createElement("p"),z=document.createElement("img"),D=document.createElement("img"),Y=t.p+"1c2300e8610a0cb064bb.svg",U=document.createElement("p"),F=document.createElement("div"),O=document.createElement("div"),P=document.querySelector("#content"),q=document.createElement("div"),R=document.createElement("div");!function(){const n=document.createElement("img"),e=document.createElement("p");n.src=C,e.textContent="Today";const t=document.createElement("img"),i=document.createElement("p");t.src=p,i.textContent="Week";const r=document.createElement("img"),a=document.createElement("p");r.src=B,a.textContent="Month";const o=document.createElement("img"),A=document.createElement("p");o.src=v,A.textContent="Upcoming",y.classList.add("todo-list"),b.classList.add("today-container"),n.classList.add("today-icon"),n.classList.add("icon"),e.classList.add("text"),E.classList.add("week-container"),t.classList.add("week-icon"),t.classList.add("icon"),i.classList.add("text"),w.classList.add("month-container"),r.classList.add("month-icon"),r.classList.add("icon"),a.classList.add("text"),x.classList.add("upcoming-container"),o.classList.add("upcoming-icon"),o.classList.add("icon"),A.classList.add("text"),q.insertAdjacentElement("beforeend",y),y.insertAdjacentElement("beforeend",b),y.insertAdjacentElement("beforeend",E),y.insertAdjacentElement("beforeend",w),y.insertAdjacentElement("beforeend",x),b.insertAdjacentElement("beforeend",n),b.insertAdjacentElement("beforeend",e),E.insertAdjacentElement("beforeend",t),E.insertAdjacentElement("beforeend",i),w.insertAdjacentElement("beforeend",r),w.insertAdjacentElement("beforeend",a),x.insertAdjacentElement("beforeend",o),x.insertAdjacentElement("beforeend",A)}(),function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("img"),i=document.createElement("p");t.src=M,i.textContent="Priorities";const r=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),A=document.createElement("div"),s=document.createElement("img"),c=document.createElement("img"),d=document.createElement("img"),l=document.createElement("p"),u=document.createElement("p"),m=document.createElement("p");l.textContent="Critical",u.textContent="Major",m.textContent="Moderate",s.src=I,c.src=k,d.src=j,n.classList.add("priority"),e.classList.add("priorities"),t.classList.add("icon"),t.classList.add("Arrow-icon"),i.classList.add("text"),r.classList.add("priority-content"),a.classList.add("critical"),o.classList.add("major"),A.classList.add("moderate"),s.classList.add("icon"),c.classList.add("icon"),d.classList.add("icon"),l.classList.add("text"),u.classList.add("text"),m.classList.add("text"),q.insertAdjacentElement("beforeend",n),n.insertAdjacentElement("beforeend",e),n.insertAdjacentElement("beforeend",r),e.insertAdjacentElement("beforeend",t),e.insertAdjacentElement("beforeend",i),r.insertAdjacentElement("beforeend",a),r.insertAdjacentElement("beforeend",o),r.insertAdjacentElement("beforeend",A),a.insertAdjacentElement("beforeend",s),a.insertAdjacentElement("beforeend",l),o.insertAdjacentElement("beforeend",c),o.insertAdjacentElement("beforeend",u),A.insertAdjacentElement("beforeend",d),A.insertAdjacentElement("beforeend",m)}(),function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("img"),i=document.createElement("p");i.textContent="Projects",t.src=M;const r=document.createElement("div"),a=document.createElement("div"),o=document.createElement("img"),A=document.createElement("p");n.classList.add("projects"),e.classList.add("project"),t.classList.add("icon"),t.classList.add("Arrow-icon"),i.classList.add("text"),r.classList.add("projects-content"),a.classList.add("add-project"),o.classList.add("icon"),A.classList.add("text"),A.textContent="Add",o.src=S,q.insertAdjacentElement("beforeend",n),n.insertAdjacentElement("beforeend",e),n.insertAdjacentElement("beforeend",r),n.insertAdjacentElement("beforeend",a),e.insertAdjacentElement("beforeend",t),e.insertAdjacentElement("beforeend",i),a.insertAdjacentElement("beforeend",o),a.insertAdjacentElement("beforeend",A)}(),function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("img"),i=document.createElement("p");t.src=L,i.textContent="Sources";const r=document.createElement("div"),a=document.createElement("img"),o=document.createElement("p");a.src=T,o.textContent="Settings",n.classList.add("adjustments"),e.classList.add("sources"),t.classList.add("icon"),i.classList.add("text"),r.classList.add("settings"),a.classList.add("icon"),o.classList.add("text"),q.insertAdjacentElement("beforeend",n),n.insertAdjacentElement("beforeend",e),n.insertAdjacentElement("beforeend",r),e.insertAdjacentElement("beforeend",t),e.insertAdjacentElement("beforeend",i),r.insertAdjacentElement("beforeend",a),r.insertAdjacentElement("beforeend",o)}(),function(){const n=document.createElement("div"),e=document.createElement("div");D.src=M;const t=document.createElement("div");W.textContent="Today";const i=document.createElement("div");z.src=S,n.classList.add("header-main"),e.classList.add("hide-side-header"),D.classList.add("icon"),t.classList.add("current-section"),W.classList.add("text"),i.classList.add("add-new-item"),z.classList.add("icon"),R.insertAdjacentElement("beforeend",n),n.insertAdjacentElement("beforeend",e),n.insertAdjacentElement("beforeend",t),n.insertAdjacentElement("beforeend",i),e.insertAdjacentElement("beforeend",D),t.insertAdjacentElement("beforeend",W),i.insertAdjacentElement("beforeend",z)}(),function(){const n=document.createElement("p"),e=document.createElement("img");n.textContent="All Done For",U.textContent="Today!",e.src=Y,F.classList.add("main-content"),O.classList.add("done-div"),n.classList.add("text"),U.classList.add("text"),e.classList.add("icon"),R.insertAdjacentElement("beforeend",F),F.insertAdjacentElement("beforeend",O),O.insertAdjacentElement("beforeend",n),O.insertAdjacentElement("beforeend",U),O.insertAdjacentElement("beforeend",e)}();const X=document.createElement("div"),N=document.createElement("div"),Z=document.createElement("form"),Q=document.createElement("button"),G=document.createElement("input"),H=document.createElement("input"),V=document.createElement("textarea");function J(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function _(n){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},_(n)}function $(n){return J(1,arguments),n instanceof Date||"object"===_(n)&&"[object Date]"===Object.prototype.toString.call(n)}function K(n){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},K(n)}function nn(n){J(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===K(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function en(n){if(J(1,arguments),!$(n)&&"number"!=typeof n)return!1;var e=nn(n);return!isNaN(Number(e))}function tn(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function rn(n,e){J(2,arguments);var t=nn(n).getTime(),i=tn(e);return new Date(t+i)}function an(n,e){J(2,arguments);var t=tn(e);return rn(n,-t)}var on=864e5;function An(n){J(1,arguments);var e=1,t=nn(n),i=t.getUTCDay(),r=(i<e?7:0)+i-e;return t.setUTCDate(t.getUTCDate()-r),t.setUTCHours(0,0,0,0),t}function sn(n){J(1,arguments);var e=nn(n),t=e.getUTCFullYear(),i=new Date(0);i.setUTCFullYear(t+1,0,4),i.setUTCHours(0,0,0,0);var r=An(i),a=new Date(0);a.setUTCFullYear(t,0,4),a.setUTCHours(0,0,0,0);var o=An(a);return e.getTime()>=r.getTime()?t+1:e.getTime()>=o.getTime()?t:t-1}function cn(n){J(1,arguments);var e=sn(n),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var i=An(t);return i}var dn=6048e5,ln={};function un(){return ln}function mn(n,e){var t,i,r,a,o,A,s,c;J(1,arguments);var d=un(),l=tn(null!==(t=null!==(i=null!==(r=null!==(a=null==e?void 0:e.weekStartsOn)&&void 0!==a?a:null==e||null===(o=e.locale)||void 0===o||null===(A=o.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==r?r:d.weekStartsOn)&&void 0!==i?i:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=nn(n),m=u.getUTCDay(),h=(m<l?7:0)+m-l;return u.setUTCDate(u.getUTCDate()-h),u.setUTCHours(0,0,0,0),u}function hn(n,e){var t,i,r,a,o,A,s,c;J(1,arguments);var d=nn(n),l=d.getUTCFullYear(),u=un(),m=tn(null!==(t=null!==(i=null!==(r=null!==(a=null==e?void 0:e.firstWeekContainsDate)&&void 0!==a?a:null==e||null===(o=e.locale)||void 0===o||null===(A=o.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==r?r:u.firstWeekContainsDate)&&void 0!==i?i:null===(s=u.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==t?t:1);if(!(m>=1&&m<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var h=new Date(0);h.setUTCFullYear(l+1,0,m),h.setUTCHours(0,0,0,0);var f=mn(h,e),g=new Date(0);g.setUTCFullYear(l,0,m),g.setUTCHours(0,0,0,0);var C=mn(g,e);return d.getTime()>=f.getTime()?l+1:d.getTime()>=C.getTime()?l:l-1}function fn(n,e){var t,i,r,a,o,A,s,c;J(1,arguments);var d=un(),l=tn(null!==(t=null!==(i=null!==(r=null!==(a=null==e?void 0:e.firstWeekContainsDate)&&void 0!==a?a:null==e||null===(o=e.locale)||void 0===o||null===(A=o.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==r?r:d.firstWeekContainsDate)&&void 0!==i?i:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==t?t:1),u=hn(n,e),m=new Date(0);m.setUTCFullYear(u,0,l),m.setUTCHours(0,0,0,0);var h=mn(m,e);return h}var gn=6048e5;function Cn(n,e){for(var t=n<0?"-":"",i=Math.abs(n).toString();i.length<e;)i="0"+i;return t+i}const pn=function(n,e){var t=n.getUTCFullYear(),i=t>0?t:1-t;return Cn("yy"===e?i%100:i,e.length)},Bn=function(n,e){var t=n.getUTCMonth();return"M"===e?String(t+1):Cn(t+1,2)},vn=function(n,e){return Cn(n.getUTCDate(),e.length)},bn=function(n,e){return Cn(n.getUTCHours()%12||12,e.length)},En=function(n,e){return Cn(n.getUTCHours(),e.length)},wn=function(n,e){return Cn(n.getUTCMinutes(),e.length)},xn=function(n,e){return Cn(n.getUTCSeconds(),e.length)},yn=function(n,e){var t=e.length,i=n.getUTCMilliseconds();return Cn(Math.floor(i*Math.pow(10,t-3)),e.length)};var In={G:function(n,e,t){var i=n.getUTCFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(i,{width:"abbreviated"});case"GGGGG":return t.era(i,{width:"narrow"});default:return t.era(i,{width:"wide"})}},y:function(n,e,t){if("yo"===e){var i=n.getUTCFullYear(),r=i>0?i:1-i;return t.ordinalNumber(r,{unit:"year"})}return pn(n,e)},Y:function(n,e,t,i){var r=hn(n,i),a=r>0?r:1-r;return"YY"===e?Cn(a%100,2):"Yo"===e?t.ordinalNumber(a,{unit:"year"}):Cn(a,e.length)},R:function(n,e){return Cn(sn(n),e.length)},u:function(n,e){return Cn(n.getUTCFullYear(),e.length)},Q:function(n,e,t){var i=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"Q":return String(i);case"QQ":return Cn(i,2);case"Qo":return t.ordinalNumber(i,{unit:"quarter"});case"QQQ":return t.quarter(i,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(i,{width:"narrow",context:"formatting"});default:return t.quarter(i,{width:"wide",context:"formatting"})}},q:function(n,e,t){var i=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"q":return String(i);case"qq":return Cn(i,2);case"qo":return t.ordinalNumber(i,{unit:"quarter"});case"qqq":return t.quarter(i,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(i,{width:"narrow",context:"standalone"});default:return t.quarter(i,{width:"wide",context:"standalone"})}},M:function(n,e,t){var i=n.getUTCMonth();switch(e){case"M":case"MM":return Bn(n,e);case"Mo":return t.ordinalNumber(i+1,{unit:"month"});case"MMM":return t.month(i,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(i,{width:"narrow",context:"formatting"});default:return t.month(i,{width:"wide",context:"formatting"})}},L:function(n,e,t){var i=n.getUTCMonth();switch(e){case"L":return String(i+1);case"LL":return Cn(i+1,2);case"Lo":return t.ordinalNumber(i+1,{unit:"month"});case"LLL":return t.month(i,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(i,{width:"narrow",context:"standalone"});default:return t.month(i,{width:"wide",context:"standalone"})}},w:function(n,e,t,i){var r=function(n,e){J(1,arguments);var t=nn(n),i=mn(t,e).getTime()-fn(t,e).getTime();return Math.round(i/gn)+1}(n,i);return"wo"===e?t.ordinalNumber(r,{unit:"week"}):Cn(r,e.length)},I:function(n,e,t){var i=function(n){J(1,arguments);var e=nn(n),t=An(e).getTime()-cn(e).getTime();return Math.round(t/dn)+1}(n);return"Io"===e?t.ordinalNumber(i,{unit:"week"}):Cn(i,e.length)},d:function(n,e,t){return"do"===e?t.ordinalNumber(n.getUTCDate(),{unit:"date"}):vn(n,e)},D:function(n,e,t){var i=function(n){J(1,arguments);var e=nn(n),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var i=e.getTime(),r=t-i;return Math.floor(r/on)+1}(n);return"Do"===e?t.ordinalNumber(i,{unit:"dayOfYear"}):Cn(i,e.length)},E:function(n,e,t){var i=n.getUTCDay();switch(e){case"E":case"EE":case"EEE":return t.day(i,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(i,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(i,{width:"short",context:"formatting"});default:return t.day(i,{width:"wide",context:"formatting"})}},e:function(n,e,t,i){var r=n.getUTCDay(),a=(r-i.weekStartsOn+8)%7||7;switch(e){case"e":return String(a);case"ee":return Cn(a,2);case"eo":return t.ordinalNumber(a,{unit:"day"});case"eee":return t.day(r,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(r,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},c:function(n,e,t,i){var r=n.getUTCDay(),a=(r-i.weekStartsOn+8)%7||7;switch(e){case"c":return String(a);case"cc":return Cn(a,e.length);case"co":return t.ordinalNumber(a,{unit:"day"});case"ccc":return t.day(r,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(r,{width:"narrow",context:"standalone"});case"cccccc":return t.day(r,{width:"short",context:"standalone"});default:return t.day(r,{width:"wide",context:"standalone"})}},i:function(n,e,t){var i=n.getUTCDay(),r=0===i?7:i;switch(e){case"i":return String(r);case"ii":return Cn(r,e.length);case"io":return t.ordinalNumber(r,{unit:"day"});case"iii":return t.day(i,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(i,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(i,{width:"short",context:"formatting"});default:return t.day(i,{width:"wide",context:"formatting"})}},a:function(n,e,t){var i=n.getUTCHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(i,{width:"narrow",context:"formatting"});default:return t.dayPeriod(i,{width:"wide",context:"formatting"})}},b:function(n,e,t){var i,r=n.getUTCHours();switch(i=12===r?"noon":0===r?"midnight":r/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(i,{width:"narrow",context:"formatting"});default:return t.dayPeriod(i,{width:"wide",context:"formatting"})}},B:function(n,e,t){var i,r=n.getUTCHours();switch(i=r>=17?"evening":r>=12?"afternoon":r>=4?"morning":"night",e){case"B":case"BB":case"BBB":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(i,{width:"narrow",context:"formatting"});default:return t.dayPeriod(i,{width:"wide",context:"formatting"})}},h:function(n,e,t){if("ho"===e){var i=n.getUTCHours()%12;return 0===i&&(i=12),t.ordinalNumber(i,{unit:"hour"})}return bn(n,e)},H:function(n,e,t){return"Ho"===e?t.ordinalNumber(n.getUTCHours(),{unit:"hour"}):En(n,e)},K:function(n,e,t){var i=n.getUTCHours()%12;return"Ko"===e?t.ordinalNumber(i,{unit:"hour"}):Cn(i,e.length)},k:function(n,e,t){var i=n.getUTCHours();return 0===i&&(i=24),"ko"===e?t.ordinalNumber(i,{unit:"hour"}):Cn(i,e.length)},m:function(n,e,t){return"mo"===e?t.ordinalNumber(n.getUTCMinutes(),{unit:"minute"}):wn(n,e)},s:function(n,e,t){return"so"===e?t.ordinalNumber(n.getUTCSeconds(),{unit:"second"}):xn(n,e)},S:function(n,e){return yn(n,e)},X:function(n,e,t,i){var r=(i._originalDate||n).getTimezoneOffset();if(0===r)return"Z";switch(e){case"X":return jn(r);case"XXXX":case"XX":return Mn(r);default:return Mn(r,":")}},x:function(n,e,t,i){var r=(i._originalDate||n).getTimezoneOffset();switch(e){case"x":return jn(r);case"xxxx":case"xx":return Mn(r);default:return Mn(r,":")}},O:function(n,e,t,i){var r=(i._originalDate||n).getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+kn(r,":");default:return"GMT"+Mn(r,":")}},z:function(n,e,t,i){var r=(i._originalDate||n).getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+kn(r,":");default:return"GMT"+Mn(r,":")}},t:function(n,e,t,i){var r=i._originalDate||n;return Cn(Math.floor(r.getTime()/1e3),e.length)},T:function(n,e,t,i){return Cn((i._originalDate||n).getTime(),e.length)}};function kn(n,e){var t=n>0?"-":"+",i=Math.abs(n),r=Math.floor(i/60),a=i%60;if(0===a)return t+String(r);var o=e||"";return t+String(r)+o+Cn(a,2)}function jn(n,e){return n%60==0?(n>0?"-":"+")+Cn(Math.abs(n)/60,2):Mn(n,e)}function Mn(n,e){var t=e||"",i=n>0?"-":"+",r=Math.abs(n);return i+Cn(Math.floor(r/60),2)+t+Cn(r%60,2)}const Sn=In;var Ln=function(n,e){switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});default:return e.date({width:"full"})}},Tn=function(n,e){switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});default:return e.time({width:"full"})}};const Wn={p:Tn,P:function(n,e){var t,i=n.match(/(P+)(p+)?/)||[],r=i[1],a=i[2];if(!a)return Ln(n,e);switch(r){case"P":t=e.dateTime({width:"short"});break;case"PP":t=e.dateTime({width:"medium"});break;case"PPP":t=e.dateTime({width:"long"});break;default:t=e.dateTime({width:"full"})}return t.replace("{{date}}",Ln(r,e)).replace("{{time}}",Tn(a,e))}};function zn(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var Dn=["D","DD"],Yn=["YY","YYYY"];function Un(n){return-1!==Dn.indexOf(n)}function Fn(n){return-1!==Yn.indexOf(n)}function On(n,e,t){if("YYYY"===n)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===n)throw new RangeError("Use `yy` instead of `YY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===n)throw new RangeError("Use `d` instead of `D` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===n)throw new RangeError("Use `dd` instead of `DD` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var Pn={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function qn(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,i=n.formats[t]||n.formats[n.defaultWidth];return i}}const Rn={date:qn({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:qn({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:qn({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var Xn={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function Nn(n){return function(e,t){var i;if("formatting"===(null!=t&&t.context?String(t.context):"standalone")&&n.formattingValues){var r=n.defaultFormattingWidth||n.defaultWidth,a=null!=t&&t.width?String(t.width):r;i=n.formattingValues[a]||n.formattingValues[r]}else{var o=n.defaultWidth,A=null!=t&&t.width?String(t.width):n.defaultWidth;i=n.values[A]||n.values[o]}return i[n.argumentCallback?n.argumentCallback(e):e]}}const Zn={ordinalNumber:function(n,e){var t=Number(n),i=t%100;if(i>20||i<10)switch(i%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:Nn({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:Nn({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:Nn({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:Nn({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:Nn({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function Qn(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=t.width,r=i&&n.matchPatterns[i]||n.matchPatterns[n.defaultMatchWidth],a=e.match(r);if(!a)return null;var o,A=a[0],s=i&&n.parsePatterns[i]||n.parsePatterns[n.defaultParseWidth],c=Array.isArray(s)?Hn(s,(function(n){return n.test(A)})):Gn(s,(function(n){return n.test(A)}));o=n.valueCallback?n.valueCallback(c):c,o=t.valueCallback?t.valueCallback(o):o;var d=e.slice(A.length);return{value:o,rest:d}}}function Gn(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function Hn(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}var Vn,Jn={ordinalNumber:(Vn={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}},function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.match(Vn.matchPattern);if(!t)return null;var i=t[0],r=n.match(Vn.parsePattern);if(!r)return null;var a=Vn.valueCallback?Vn.valueCallback(r[0]):r[0];a=e.valueCallback?e.valueCallback(a):a;var o=n.slice(i.length);return{value:a,rest:o}}),era:Qn({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:Qn({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:Qn({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:Qn({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:Qn({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const _n={code:"en-US",formatDistance:function(n,e,t){var i,r=Pn[n];return i="string"==typeof r?r:1===e?r.one:r.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+i:i+" ago":i},formatLong:Rn,formatRelative:function(n,e,t,i){return Xn[n]},localize:Zn,match:Jn,options:{weekStartsOn:0,firstWeekContainsDate:1}};var $n=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,Kn=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,ne=/^'([^]*?)'?$/,ee=/''/g,te=/[a-zA-Z]/;function ie(n,e,t){var i,r,a,o,A,s,c,d,l,u,m,h,f,g,C,p,B,v;J(2,arguments);var b=String(e),E=un(),w=null!==(i=null!==(r=null==t?void 0:t.locale)&&void 0!==r?r:E.locale)&&void 0!==i?i:_n,x=tn(null!==(a=null!==(o=null!==(A=null!==(s=null==t?void 0:t.firstWeekContainsDate)&&void 0!==s?s:null==t||null===(c=t.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==A?A:E.firstWeekContainsDate)&&void 0!==o?o:null===(l=E.locale)||void 0===l||null===(u=l.options)||void 0===u?void 0:u.firstWeekContainsDate)&&void 0!==a?a:1);if(!(x>=1&&x<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var y=tn(null!==(m=null!==(h=null!==(f=null!==(g=null==t?void 0:t.weekStartsOn)&&void 0!==g?g:null==t||null===(C=t.locale)||void 0===C||null===(p=C.options)||void 0===p?void 0:p.weekStartsOn)&&void 0!==f?f:E.weekStartsOn)&&void 0!==h?h:null===(B=E.locale)||void 0===B||null===(v=B.options)||void 0===v?void 0:v.weekStartsOn)&&void 0!==m?m:0);if(!(y>=0&&y<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!w.localize)throw new RangeError("locale must contain localize property");if(!w.formatLong)throw new RangeError("locale must contain formatLong property");var I=nn(n);if(!en(I))throw new RangeError("Invalid time value");var k=zn(I),j=an(I,k),M={firstWeekContainsDate:x,weekStartsOn:y,locale:w,_originalDate:I},S=b.match(Kn).map((function(n){var e=n[0];return"p"===e||"P"===e?(0,Wn[e])(n,w.formatLong):n})).join("").match($n).map((function(i){if("''"===i)return"'";var r=i[0];if("'"===r)return re(i);var a=Sn[r];if(a)return null!=t&&t.useAdditionalWeekYearTokens||!Fn(i)||On(i,e,String(n)),null!=t&&t.useAdditionalDayOfYearTokens||!Un(i)||On(i,e,String(n)),a(j,i,w.localize,M);if(r.match(te))throw new RangeError("Format string contains an unescaped latin alphabet character `"+r+"`");return i})).join("");return S}function re(n){var e=n.match(ne);return e?e[1].replace(ee,"'"):n}q.classList.add("side-header-active"),R.classList.add("main-active"),P.insertAdjacentElement("beforeend",q),P.insertAdjacentElement("beforeend",R),function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),i=document.createElement("div");n.classList.add("todoT-main"),e.classList.add("todoW-main"),t.classList.add("todoM-main"),i.classList.add("todoU-main");let r=n,a=ie(new Date,"yyyy-MM-dd"),o=(ie(new Date,"yyyy-MM-01"),ie(function(n){J(1,arguments);var e=nn(n),t=e.getMonth();return e.setFullYear(e.getFullYear(),t+1,0),e.setHours(0,0,0,0),e}(new Date),"yyyy-MM-dd")),A=ie(function(n,e){var t,i,r,a,o,A,s,c;J(1,arguments);var d=un(),l=tn(null!==(t=null!==(i=null!==(r=null!==(a=null==e?void 0:e.weekStartsOn)&&void 0!==a?a:null==e||null===(o=e.locale)||void 0===o||null===(A=o.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==r?r:d.weekStartsOn)&&void 0!==i?i:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=nn(n),m=u.getDay(),h=(m<l?7:0)+m-l;return u.setDate(u.getDate()-h),u.setHours(0,0,0,0),u}(new Date),"dd"),s=ie(function(n,e){var t,i,r,a,o,A,s,c;J(1,arguments);var d=un(),l=tn(null!==(t=null!==(i=null!==(r=null!==(a=null==e?void 0:e.weekStartsOn)&&void 0!==a?a:null==e||null===(o=e.locale)||void 0===o||null===(A=o.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==r?r:d.weekStartsOn)&&void 0!==i?i:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=nn(n),m=u.getDay(),h=6+(m<l?-7:0)-(m-l);return u.setDate(u.getDate()+h),u.setHours(23,59,59,999),u}(new Date),"dd"),c=ie(new Date,"yyyy"),d=ie(new Date,"MM");b.addEventListener("click",(a=>{W.textContent="Today",U.textContent="Today!",e.remove(),t.remove(),i.remove(),r=n,n.hasChildNodes()?(O.remove(),F.appendChild(n),n.classList.add("main-todo-active"),F.style.alignItems="flex-start"):F.style.alignItems="center"})),E.addEventListener("click",(a=>{W.textContent="Week",U.textContent="Week!",n.remove(),t.remove(),i.remove(),r=e,e.hasChildNodes()?(O.remove(),F.appendChild(e),e.classList.add("main-todo-active"),F.style.alignItems="flex-start"):(F.style.alignItems="center",n.classList.remove("main-todo-active"),F.append(O))})),w.addEventListener("click",(a=>{W.textContent="Month",U.textContent="Month!",n.remove(),e.remove(),i.remove(),r=t,t.hasChildNodes()?(O.remove(),F.appendChild(t),t.classList.add("main-todo-active"),F.style.alignItems="flex-start"):F.style.alignItems="center"})),x.addEventListener("click",(a=>{W.textContent="Upcoming",U.textContent="Upcoming!",n.remove(),e.remove(),t.remove(),r=i,n.hasChildNodes()?(O.remove(),F.appendChild(i),i.classList.add("main-todo-active"),F.style.alignItems="flex-start"):F.style.alignItems="center"})),z.addEventListener("click",(l=>{switch(X.classList.add("active-add"),N.classList.add("active-overlay"),Z.classList.add("form-active"),r){case n:H.min=a,H.max=a,H.value=a,H.style.cursor="not-allowed",H.required=!1,H.style.pointerEvents="none";break;case e:H.min=c+"-"+d+"-"+A,H.max=c+"-"+d+"-"+s,H.value=a,H.style.cursor="pointer",H.required=!0,H.style.pointerEvents="all";break;case t:H.min=a,H.max=o,H.value=a,H.style.cursor="pointer",H.required=!0,H.style.pointerEvents="all";break;case i:H.min=a,H.max="none",H.value=a,H.style.cursor="pointer",H.required=!0,H.style.pointerEvents="all"}})),Q.addEventListener("click",(n=>{if(n.preventDefault(),""!=G.value&&""!=V.value&&""!=H.value){let n=G.value,e=V.value,t=H.value;O.remove();const i=document.createElement("div"),a=document.createElement("div"),o=document.createElement("input");o.type="checkbox";const A=document.createElement("div"),s=document.createElement("div"),c=document.createElement("div"),d=document.createElement("p"),l=document.createElement("div"),u=document.createElement("p");u.textContent="",d.textContent="";const m=document.createElement("div"),h=document.createElement("p");h.textContent=n;const f=document.createElement("div"),g=document.createElement("div"),C=document.createElement("div");r.classList.add("main-todo-active"),i.classList.add("item"),A.classList.add("top-item"),A.classList.add("top-end-item-active"),a.classList.add("check-container"),o.classList.add("button-check"),s.classList.add("middle-item"),c.classList.add("desc-container"),d.classList.add("desc"),l.classList.add("end-item"),u.classList.add("date-p"),m.classList.add("tittle-list-container"),h.classList.add("tittle-text"),f.classList.add("remove-container"),g.classList.add("side-one-remove"),C.classList.add("side-two-remove"),F.style.alignItems="flex-start",F.insertAdjacentElement("beforeend",r),r.insertAdjacentElement("beforeend",i),i.insertAdjacentElement("beforeend",A),A.insertAdjacentElement("beforeend",a),A.insertAdjacentElement("beforeend",m),i.insertAdjacentElement("beforeend",s),i.insertAdjacentElement("beforeend",l),a.insertAdjacentElement("beforeend",o),m.insertAdjacentElement("beforeend",h),s.insertAdjacentElement("beforeend",c),c.insertAdjacentElement("beforeend",d),l.insertAdjacentElement("beforeend",u),X.classList.remove("active-add"),N.classList.remove("active-overlay"),Z.classList.remove("form-active"),o.addEventListener("click",(n=>{!0===o.checked?(h.style.color="#959595",h.style.textDecoration="line-through",d.style.color="#959595",d.style.textDecoration="line-through",u.style.color="#959595",u.style.textDecoration="line-through"):(h.style.color="#fafafa",h.style.textDecoration="none",d.style.color="#fafafa",d.style.textDecoration="none",u.style.color="#fafafa",u.style.textDecoration="none")}));let p=!1;i.addEventListener("click",(n=>{p=!p,n.target!==o&&(!0===p?(i.classList.add("item-expand"),s.classList.add("middle-item-active"),l.classList.add("top-end-item-active"),setTimeout((()=>{d.textContent=e,u.textContent="Due   "+t}),"400")):(i.classList.remove("item-expand"),s.classList.remove("middle-item-active"),l.classList.remove("top-end-item-active"),d.textContent="",u.textContent=""))}))}G.value.length>0&&V.value.length>0&&H.value.length>0&&(G.value="",V.value="",H.value="")}))}(),function(){const n=document.createElement("div"),e=document.createElement("label"),t=document.createElement("div"),i=document.createElement("label"),r=document.createElement("div"),a=document.createElement("label"),o=document.createElement("div");Q.textContent="Add",e.textContent="Tittle :",G.minLength="3",G.maxLength="20",G.required=!0,G.type="text",H.type="date",H.required=!0,i.textContent="Date :",V.required=!0,V.minLength="2",V.maxLength="100",a.textContent="Description :",X.classList.add("add-container"),N.classList.add("overlay"),Z.classList.add("form-add"),n.classList.add("tittle-container"),e.classList.add("label"),G.classList.add("input"),t.classList.add("date-container"),i.classList.add("label"),H.classList.add("input"),r.classList.add("description-container"),a.classList.add("label"),V.classList.add("textarea"),o.classList.add("btn-submit-container"),Q.classList.add("submit-add"),P.insertAdjacentElement("beforeend",X),P.insertAdjacentElement("beforeend",N),X.insertAdjacentElement("beforeend",Z),Z.insertAdjacentElement("beforeend",n),Z.insertAdjacentElement("beforeend",r),Z.insertAdjacentElement("beforeend",t),Z.insertAdjacentElement("beforeend",o),n.insertAdjacentElement("beforeend",e),n.insertAdjacentElement("beforeend",G),r.insertAdjacentElement("beforeend",a),r.insertAdjacentElement("beforeend",V),t.insertAdjacentElement("beforeend",i),t.insertAdjacentElement("beforeend",H),o.insertAdjacentElement("beforeend",Q),N.addEventListener("click",(n=>{X.classList.remove("active-add"),N.classList.remove("active-overlay"),Z.classList.remove("form-active")}))}(),function(){let n=!1;D.addEventListener("click",(e=>{switch(n=!n,n){case!0:D.style.rotate="-90deg",q.remove(),R.classList.add("main-strech"),R.classList.remove("main-active");break;case!1:D.style.rotate="0deg",P.insertAdjacentElement("beforeend",q),R.classList.remove("main-strech"),R.classList.add("main-active")}}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,